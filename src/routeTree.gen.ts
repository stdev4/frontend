/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VocaImport } from './routes/voca'
import { Route as SigninImport } from './routes/signin'
import { Route as QuizImport } from './routes/quiz'
import { Route as OnboardingImport } from './routes/onboarding'
import { Route as MypageImport } from './routes/mypage'
import { Route as ChatImport } from './routes/chat'
import { Route as IndexImport } from './routes/index'
import { Route as VocaTermIdImport } from './routes/voca/$termId'
import { Route as QuizRandomImport } from './routes/quiz/random'
import { Route as QuizInterestImport } from './routes/quiz/interest'
import { Route as ChatScientistImport } from './routes/chat/$scientist'

// Create/Update Routes

const VocaRoute = VocaImport.update({
  id: '/voca',
  path: '/voca',
  getParentRoute: () => rootRoute,
} as any)

const SigninRoute = SigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const QuizRoute = QuizImport.update({
  id: '/quiz',
  path: '/quiz',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingRoute = OnboardingImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const MypageRoute = MypageImport.update({
  id: '/mypage',
  path: '/mypage',
  getParentRoute: () => rootRoute,
} as any)

const ChatRoute = ChatImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const VocaTermIdRoute = VocaTermIdImport.update({
  id: '/$termId',
  path: '/$termId',
  getParentRoute: () => VocaRoute,
} as any)

const QuizRandomRoute = QuizRandomImport.update({
  id: '/random',
  path: '/random',
  getParentRoute: () => QuizRoute,
} as any)

const QuizInterestRoute = QuizInterestImport.update({
  id: '/interest',
  path: '/interest',
  getParentRoute: () => QuizRoute,
} as any)

const ChatScientistRoute = ChatScientistImport.update({
  id: '/$scientist',
  path: '/$scientist',
  getParentRoute: () => ChatRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatImport
      parentRoute: typeof rootRoute
    }
    '/mypage': {
      id: '/mypage'
      path: '/mypage'
      fullPath: '/mypage'
      preLoaderRoute: typeof MypageImport
      parentRoute: typeof rootRoute
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingImport
      parentRoute: typeof rootRoute
    }
    '/quiz': {
      id: '/quiz'
      path: '/quiz'
      fullPath: '/quiz'
      preLoaderRoute: typeof QuizImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/voca': {
      id: '/voca'
      path: '/voca'
      fullPath: '/voca'
      preLoaderRoute: typeof VocaImport
      parentRoute: typeof rootRoute
    }
    '/chat/$scientist': {
      id: '/chat/$scientist'
      path: '/$scientist'
      fullPath: '/chat/$scientist'
      preLoaderRoute: typeof ChatScientistImport
      parentRoute: typeof ChatImport
    }
    '/quiz/interest': {
      id: '/quiz/interest'
      path: '/interest'
      fullPath: '/quiz/interest'
      preLoaderRoute: typeof QuizInterestImport
      parentRoute: typeof QuizImport
    }
    '/quiz/random': {
      id: '/quiz/random'
      path: '/random'
      fullPath: '/quiz/random'
      preLoaderRoute: typeof QuizRandomImport
      parentRoute: typeof QuizImport
    }
    '/voca/$termId': {
      id: '/voca/$termId'
      path: '/$termId'
      fullPath: '/voca/$termId'
      preLoaderRoute: typeof VocaTermIdImport
      parentRoute: typeof VocaImport
    }
  }
}

// Create and export the route tree

interface ChatRouteChildren {
  ChatScientistRoute: typeof ChatScientistRoute
}

const ChatRouteChildren: ChatRouteChildren = {
  ChatScientistRoute: ChatScientistRoute,
}

const ChatRouteWithChildren = ChatRoute._addFileChildren(ChatRouteChildren)

interface QuizRouteChildren {
  QuizInterestRoute: typeof QuizInterestRoute
  QuizRandomRoute: typeof QuizRandomRoute
}

const QuizRouteChildren: QuizRouteChildren = {
  QuizInterestRoute: QuizInterestRoute,
  QuizRandomRoute: QuizRandomRoute,
}

const QuizRouteWithChildren = QuizRoute._addFileChildren(QuizRouteChildren)

interface VocaRouteChildren {
  VocaTermIdRoute: typeof VocaTermIdRoute
}

const VocaRouteChildren: VocaRouteChildren = {
  VocaTermIdRoute: VocaTermIdRoute,
}

const VocaRouteWithChildren = VocaRoute._addFileChildren(VocaRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/chat': typeof ChatRouteWithChildren
  '/mypage': typeof MypageRoute
  '/onboarding': typeof OnboardingRoute
  '/quiz': typeof QuizRouteWithChildren
  '/signin': typeof SigninRoute
  '/voca': typeof VocaRouteWithChildren
  '/chat/$scientist': typeof ChatScientistRoute
  '/quiz/interest': typeof QuizInterestRoute
  '/quiz/random': typeof QuizRandomRoute
  '/voca/$termId': typeof VocaTermIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/chat': typeof ChatRouteWithChildren
  '/mypage': typeof MypageRoute
  '/onboarding': typeof OnboardingRoute
  '/quiz': typeof QuizRouteWithChildren
  '/signin': typeof SigninRoute
  '/voca': typeof VocaRouteWithChildren
  '/chat/$scientist': typeof ChatScientistRoute
  '/quiz/interest': typeof QuizInterestRoute
  '/quiz/random': typeof QuizRandomRoute
  '/voca/$termId': typeof VocaTermIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/chat': typeof ChatRouteWithChildren
  '/mypage': typeof MypageRoute
  '/onboarding': typeof OnboardingRoute
  '/quiz': typeof QuizRouteWithChildren
  '/signin': typeof SigninRoute
  '/voca': typeof VocaRouteWithChildren
  '/chat/$scientist': typeof ChatScientistRoute
  '/quiz/interest': typeof QuizInterestRoute
  '/quiz/random': typeof QuizRandomRoute
  '/voca/$termId': typeof VocaTermIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/chat'
    | '/mypage'
    | '/onboarding'
    | '/quiz'
    | '/signin'
    | '/voca'
    | '/chat/$scientist'
    | '/quiz/interest'
    | '/quiz/random'
    | '/voca/$termId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/chat'
    | '/mypage'
    | '/onboarding'
    | '/quiz'
    | '/signin'
    | '/voca'
    | '/chat/$scientist'
    | '/quiz/interest'
    | '/quiz/random'
    | '/voca/$termId'
  id:
    | '__root__'
    | '/'
    | '/chat'
    | '/mypage'
    | '/onboarding'
    | '/quiz'
    | '/signin'
    | '/voca'
    | '/chat/$scientist'
    | '/quiz/interest'
    | '/quiz/random'
    | '/voca/$termId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChatRoute: typeof ChatRouteWithChildren
  MypageRoute: typeof MypageRoute
  OnboardingRoute: typeof OnboardingRoute
  QuizRoute: typeof QuizRouteWithChildren
  SigninRoute: typeof SigninRoute
  VocaRoute: typeof VocaRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChatRoute: ChatRouteWithChildren,
  MypageRoute: MypageRoute,
  OnboardingRoute: OnboardingRoute,
  QuizRoute: QuizRouteWithChildren,
  SigninRoute: SigninRoute,
  VocaRoute: VocaRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/chat",
        "/mypage",
        "/onboarding",
        "/quiz",
        "/signin",
        "/voca"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/chat": {
      "filePath": "chat.tsx",
      "children": [
        "/chat/$scientist"
      ]
    },
    "/mypage": {
      "filePath": "mypage.tsx"
    },
    "/onboarding": {
      "filePath": "onboarding.tsx"
    },
    "/quiz": {
      "filePath": "quiz.tsx",
      "children": [
        "/quiz/interest",
        "/quiz/random"
      ]
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/voca": {
      "filePath": "voca.tsx",
      "children": [
        "/voca/$termId"
      ]
    },
    "/chat/$scientist": {
      "filePath": "chat/$scientist.tsx",
      "parent": "/chat"
    },
    "/quiz/interest": {
      "filePath": "quiz/interest.tsx",
      "parent": "/quiz"
    },
    "/quiz/random": {
      "filePath": "quiz/random.tsx",
      "parent": "/quiz"
    },
    "/voca/$termId": {
      "filePath": "voca/$termId.tsx",
      "parent": "/voca"
    }
  }
}
ROUTE_MANIFEST_END */
